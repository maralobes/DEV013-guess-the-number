'''I need import random module'''
import random
#I need to asign the range and maximum attemps
LOWER_NUMBER = 1
UPPER_NUMBER = 100
#I need to generate a random number with
def generate_secret_number(lower_number, upper_number):
    ''''lower_number & upper_number are necessary to set limits'''
    return random.randint(lower_number, upper_number)
#Create an user input
def user_guess(lower_number, upper_number):
    ''''User input and managing errors'''
    while True:
        try:
            guess = int(input(f"Enter a number between {lower_number} and {upper_number}:  "))
            if validate_user_input(guess, lower_number, upper_number):
                return guess
            else:
                print('Incorrect input. Please, enter a number between 1 and 100, inclusive. \n \n')
        except ValueError:
            print('Incorrect input. Please, enter a valid number.\n \n')
#Create computer input
def computer_guess(lower_number, upper_number):
    ''''Random number generated by computer'''
    return random.randint(lower_number, upper_number)
#Valide user input
def validate_user_input(guess, lower_number, upper_number):
    ''''If number is ok in terms of limits it is return'''
    return lower_number <= guess <= upper_number
#User input guess validation
def check_guess(guess, secret_number):
    ''''Return a message depending on the gessed number'''
    if guess == secret_number: return 'Correct'
    elif guess < secret_number: return 'Too low \n \n'
    else: return 'Too high \n \n'
def ask_if_want_to_play_again(answer):
    ''''This method ask player if want to play again or not'''
    answer = input("Do you want to play again? (Y/n)")
    answer = str.lower(answer).strip()
    answer = bool('' and 'y' in 'yes')
    answer = not bool('' and 'y' in 'yes')
    return answer
def game(lower_number, upper_number, answer = True):
    if answer == False:
        print("See you later!")
        return
    attemps = 0
    user_number_attemps = []
    computer_number_attemps = []
    secret_number = generate_secret_number(lower_number, upper_number)
    print(secret_number)
    while True:
        attemps += 1
        guess1 = user_guess(lower_number, upper_number)
        user_number_attemps.append(guess1)
        result1 = check_guess(guess1, secret_number)
        guess2 = computer_guess(lower_number, upper_number)
        computer_number_attemps.append(guess2)
        result2 = check_guess(guess2, secret_number)
        if result1 == 'Correct':
            print(f"Congrats! You guessed the secret number {secret_number} in {attemps} attemps.")
            print(f"Your numbers were {",".join(map(str, user_number_attemps))} \n \n")
            answer = ask_if_want_to_play_again(answer)
            game(lower_number, upper_number, answer)
            break
        else:
            print(result1)
            print("It is Computer turn!")
        if result2 == 'Correct':
            print(f"Congrats! You guessed the secret number {secret_number} in {attemps} attemps.")
            print(f"Your numbers were {",".join(map(str, computer_number_attemps))} \n \n")
            answer = ask_if_want_to_play_again(answer)
            game(lower_number, upper_number, answer)
            break
        else:
            print(guess2)
            print(result2)
            print("It is User turn!")
if __name__ == "__main__":
    print("Welcome to Guess the Number game! \n \n")
    game(LOWER_NUMBER, UPPER_NUMBER, answer= True)
